plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-parcelize" // Add this line if you use Parcelize
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.demo_chat_app"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    viewBinding {
        enabled = true
    }

    defaultConfig {
        applicationId = "com.example.demo_chat_app"
        minSdk = 23
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86_64", "arm64"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.0'
    // other dependencies
}

flutter {
    source = "../.."
}
